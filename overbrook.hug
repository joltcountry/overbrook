!\---------------------------------------------------------------------------
	
        HUGO v2.5 SHELL
        by Kent Tessman (c) 1995-1998

---------------------------------------------------------------------------\!

! Uncomment the following to use a precompiled version of the Hugo Library:
! #set PRECOMPILED_LIBRARY

! Uncomment the following to include the HugoFix Debugging Library:
! #set DEBUG

! Uncomment the following to include verb stub routines:
! #set VERBSTUBS

#ifset DEBUG
#switches -d
#endif
	
verb "pet"
	*                                                       DoVague
	* object                                                DoPet

#include "verblib.g"			! grammar must come first

#ifset PRECOMPILED_LIBRARY
#link "hugolib.hlb"
#else
#include "hugolib.h"
#endif

#include "window.h"

window_class graphics_window 
{
    win_left 1
    win_top
    {
        return 1 + display.statusline_height
    }
    win_bottom
    {
        return display.screenheight / 2 + 1
    }
    win_right
	{
		return display.screenwidth
	}
	
    win_textcolor BRIGHT_WHITE
    win_backcolor BLACK
}

routine init
{
	counter = -1

	STATUSTYPE = 1                  ! score/turns
	TEXTCOLOR = DEF_FOREGROUND
	BGCOLOR = DEF_BACKGROUND
	SL_TEXTCOLOR = DEF_SL_FOREGROUND
	SL_BGCOLOR = DEF_SL_BACKGROUND
	MAX_SCORE = 5

	prompt = ">"
	color TEXTCOLOR, BGCOLOR

	cls
	picture "PICS", "overbrook"
	"(Press any key to begin)"
	pause
	cls
	Font(BOLD_ON | DEFAULT_FONT)
	"OVERBROOK"
	Font(BOLD_OFF)
	"An Interactive House Tour\n"
	print BANNER

	player = you                    ! player initialization
	location = basement
	old_location = location        
	
	move player to location
	FindLight(location)
	DescribePlace(location)
	location is visited
	CalculateHolding(player)

#ifset USE_PLURAL_OBJECTS
	InitPluralObjects
#endif
}

#ifset PRECOMPILED_LIBRARY
replace main
{
#else
routine main
{
#endif
	UpdateGraphicsWindow(location)
	counter = counter + 1
	PrintStatusLine
	run location.each_turn
	runevents
	RunScripts
	if parent(speaking)~=location
		speaking = 0
}

global last_drawn_picture
global force_repaint
property graphic
global current_resource_file
global current_resource
attribute pet

routine UpdateGraphicsWindow(obj)
{
    if last_drawn_picture = obj and not force_repaint
    {
        return
    }

    if not obj.graphic and obj ~= 0         ! 0 forces window clearing
    {
        window 0
		return
    }

    run graphics_window.win_init
    window
    {
        if obj.graphic ~= -1
        {
            current_resource_file = obj.graphic #1
            current_resource = obj.graphic #2
        }
        picture current_resource_file, current_resource
    }
    run graphics_window.win_end

    last_drawn_picture = obj
    force_repaint = true

}

player_character you "you"
{
	nouns "self"
	long_desc
	{
		"hi there"
	}
}

resource "pics"
{
    "images/backyard.jpg",
	"images/backofhouse.jpg",
	"images/barandgrill.jpg",
	"images/basement.jpg",
	"images/coldroom.jpg",
	"images/frontyard.jpg",
	"images/funbath.jpg",
	"images/garagehall.jpg",
	"images/garage.jpg",
	"images/laundry.jpg",
	"images/overbrook.jpg",
	"images/playfront.jpg",
	"images/playhouseback.jpg",
	"images/playlevel1.jpg",
	"images/upperdrive.jpg",
	"images/utility.jpg",
	"images/lowerdrive.jpg",
	"images/foyer.jpg",
	"images/hub.jpg",
	"images/funroom.jpg",
	"images/office.jpg",
	"images/nook.jpg",
	"images/kitchen.jpg",
}

#include "scenery.hug"
#include "objects.hug"
#include "rooms.hug"

routine DoPet
{
	print "It would be inappropriate to pet "; The(object)
	return true
}

routine scoreit()
{
	score = score + 1
	print "\IYou scored a point!\i"
}